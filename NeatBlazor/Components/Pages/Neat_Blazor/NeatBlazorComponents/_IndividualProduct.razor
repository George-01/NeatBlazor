<div class="bg-light border col-6" @onclick="() => DivClicked(Product.ProductName)">
    <h4 class="text-secondary">Product - @Product.Id</h4>

    <input type="checkbox" @onchange="FavoriteUpdated" /> Add to Favorites <br />

    Name - @Product.ProductName <br />
    Show Properties:
    <input type="checkbox" @bind="Product.IsActive" />

    @if (Product.IsActive)
    {
        @foreach (var prodProp in Product.ProductProperties)
        {
            <p>@prodProp.Key - @prodProp.Value</p>
        }
    }
    <br />
    <_DeleteButtonComponent ProductId="@Product.Id">

    </_DeleteButtonComponent>
</div>
@code {

    [Parameter]
    public Product Product { get; set; } = new();

    [Parameter]
    public EventCallback<bool> OnFavoriteUpdated { get; set; }

    // [Parameter]
    // public EventCallback<bool> OnDivClicked { get; set; }

    [Parameter]
    public EventCallback<string> OnDivClicked { get; set; }



    private async Task FavoriteUpdated(ChangeEventArgs args)
    {
        await OnFavoriteUpdated.InvokeAsync((bool)(args.Value ?? false));
    }

    // private async Task DivClicked(MouseEventArgs args)
    // {
    //     await OnDivClicked.InvokeAsync(true);
    // }

    private async Task DivClicked(string productName)
    {
        await OnDivClicked.InvokeAsync(productName);
    }
}
